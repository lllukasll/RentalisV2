@model Rentalis_v2.Models.CarModels
@{ 
    ViewBag.Title = "AddCar";
    Layout = "~/Views/Shared/_AdminTestLayout.cshtml";
}
<script src="~/Scripts/ckeditor/ckeditor.js"></script>
<div class="top-margin gtco-container">
    <h2> Dodaj samochód : </h2>
    @using (Html.BeginForm("SaveCar", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <input type="file" name="ImageData" id="ImageData" onchange="fileCheck(this);" />

        <div class="form-group">
            @Html.LabelFor(model => model.Name)
            @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Name)
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PricePerDay)
            @Html.TextBoxFor(model => model.PricePerDay, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.PricePerDay)
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ProductionYear)
            @Html.TextBoxFor(model => model.ProductionYear, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ProductionYear)
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ShortDescription)
            @Html.TextAreaFor(model => model.ShortDescription, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ShortDescription)
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description)
            @Html.TextAreaFor(model => model.Description, new { @id = "FullDescription", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Description)
            <script>
                var roxyFileman = '../Scripts/fileman/index.html';
                CKEDITOR.replace('FullDescription', {
                    filebrowserBrowseUrl: roxyFileman,
                    filebrowserImageBrowseUrl: roxyFileman + '?type=image',
                    removeDialogTabs: 'link:upload;image:upload'
                });
            </script>
        </div>

        <div class="form-group">

            @Html.CheckBoxFor(model => model.Abs, new { @class = "form-check-input" })
            @Html.LabelFor(model => model.Abs)
            @Html.ValidationMessageFor(model => model.Abs)
        </div>
        <div class="form-group">

            @Html.CheckBoxFor(model => model.PowerSteering, new { @class = "form-check-input" })
            @Html.LabelFor(model => model.PowerSteering)
            @Html.ValidationMessageFor(model => model.PowerSteering)
        </div>
        <div class="form-group">

            @Html.CheckBoxFor(model => model.AirConditioning, new { @class = "form-check-input" })
            @Html.LabelFor(model => model.AirConditioning)
            @Html.ValidationMessageFor(model => model.AirConditioning)
        </div>
        <div class="form-group">

            @Html.CheckBoxFor(model => model.CentralLocking, new { @class = "form-check-input" })
            @Html.LabelFor(model => model.CentralLocking)
            @Html.ValidationMessageFor(model => model.CentralLocking)
        </div>
        <div class="form-group">

            @Html.CheckBoxFor(model => model.AirBags, new { @class = "form-check-input" })
            @Html.LabelFor(model => model.AirBags)
            @Html.ValidationMessageFor(model => model.AirBags)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Doors)
            @Html.DropDownListFor(model => model.Doors, new SelectList(new List<Object>
            {
                new {value = 0, text = "3"},
                new {value = 1, text = "5"},
            }, "value", "text"))
            @Html.ValidationMessageFor(model => model.Doors)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Seets)
            @Html.DropDownListFor(model => model.Seets, new SelectList(new List<Object>
            {
                new {value = 0, text = "2"},
                new {value = 1, text = "5"},
                new {value = 2, text = "7"},
            }, "value", "text"))
            @Html.ValidationMessageFor(model => model.Seets)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FuelType)
            @Html.DropDownListFor(model => model.FuelType, new SelectList(new List<Object>
            {
                new {value = 0, text = "Benzyna"},
                new {value = 1, text = "Diesel"},
                new {value = 2, text = "Benzyna+LPG"},
            }, "value", "text"))
            @Html.ValidationMessageFor(model => model.FuelType)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Type)
            @Html.DropDownListFor(model => model.Type, new SelectList(new List<Object>
            {
                new {value = 0, text = "Sedan"},
                new {value = 1, text = "Hatch-back"},
                new {value = 2, text = "Kombi"},
                new {value = 3, text = "Pick-up"},
                new {value = 4, text = "Kabriolet"},
                new {value = 5, text = "Minivan"},
                new {value = 6, text = "Limuzyna"},
            }, "value", "text"))
            @Html.ValidationMessageFor(model => model.Type)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GearBox)
            @Html.DropDownListFor(model => model.GearBox, new SelectList(new List<Object>
            {
                new {value = 0, text = "Manualna"},
                new {value = 1, text = "Automatyczna"},
            }, "value", "text"))
            @Html.ValidationMessageFor(model => model.GearBox)
        </div>

        @Html.HiddenFor(model => model.Id)
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Dodaj" class="btn btn-success" />
                @Html.ActionLink("Wróć do listy samochodów", "Cars", null, new { @class = "btn btn-primary" })
            </div>
        </div>
    }
</div>